name: Kafka User Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose 'create' to add a user or 'delete' to remove a user"
        required: true
        default: "create"
        type: choice
        options:
          - create
          - delete
jobs:
   manage-kafka-user:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Restore Kafka from Cache
        id: kafka-cache
        uses: actions/cache@v3
        with:
          path: kafka
          key: kafka-3.6.0
      - name: Install Kafka CLI
        if: steps.kafka-cache.outputs.cache-hit != 'true'
        run: |
          wget https://archive.apache.org/dist/kafka/3.6.0/kafka_2.12-3.6.0.tgz
          tar -xzf kafka_2.12-3.6.0.tgz
          mv kafka_2.12-3.6.0 kafka      
      - name: Add Kafka to PATH
        run: echo "$(pwd)/kafka/bin" >> $GITHUB_PATH
      - name: Create Kafka Config File
        run: |
          echo "security.protocol=SASL_PLAINTEXT" >> kafka_admin.properties
          echo "sasl.mechanism=SCRAM-SHA-256" >> kafka_admin.properties
          echo "sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=\"${{ secrets.KAFKA_ADMIN_USER }}\" password=\"${{ secrets.KAFKA_ADMIN_PASSWORD }}\";" >> kafka_admin.properties

      - name: Create Kafka User
        if: github.event.inputs.action == 'create'     
        env:
          KAFKA_BROKER: ${{ secrets.KAFKA_BROKER }}
          KAFKA_USER: ${{ secrets.KAFKA_USER }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
        run: |
          kafka/bin/kafka-configs.sh --bootstrap-server $KAFKA_BROKER \
            --alter --add-config "SCRAM-SHA-512=[iterations=4096,password=$KAFKA_PASSWORD]" \
            --entity-type users --entity-name $KAFKA_USER \
            --command-config kafka_admin.properties
          echo "‚úÖ Kafka user $KAFKA_USER created successfully!"
      - name: Delete Kafka User
        if: github.event.inputs.action == 'delete'
        env:
          KAFKA_BROKER: ${{ secrets.KAFKA_BROKER }}
          KAFKA_USER: ${{ secrets.KAFKA_USER }}
        run: |
          kafka/bin/kafka-configs.sh --bootstrap-server $KAFKA_BROKER \
            --alter --delete-config "SCRAM-SHA-512" \
            --entity-type users --entity-name $KAFKA_USER \
            --command-config kafka_admin.properties
          echo "üóëÔ∏è Kafka user $KAFKA_USER deleted successfully!"          
      - name: Verify Kafka User
        if: github.event.inputs.action == 'create'
        env:
          KAFKA_BROKER: ${{ secrets.KAFKA_BROKER }}
          KAFKA_USER: ${{ secrets.KAFKA_USER }}
        run: |
          USER_EXISTS=$(kafka/bin/kafka-configs.sh --bootstrap-server $KAFKA_BROKER \
            --describe --entity-type users --command-config kafka_admin.properties | grep -w "$KAFKA_USER" || echo "")
          if [[ -z "$USER_EXISTS" ]]; then
            echo "‚ùå Kafka user $KAFKA_USER was NOT found!"
            exit 1
          else
            echo "‚úÖ Kafka user $KAFKA_USER successfully added!"
          fi
